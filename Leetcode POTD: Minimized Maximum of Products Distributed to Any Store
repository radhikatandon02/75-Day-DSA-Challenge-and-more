class Solution {
public:
    bool canDistribute(int x, vector<int>& q, int n){
        int j = 0;
        int rem = q[j];
        for(int i=0; i<n; i++){
            if(rem <= x){
                j++;
                if(j == q.size()){
                    return true;
                }
                else{
                    rem = q[j];
                }
            }
            else{
                rem -= x;
            }
        }
        return false;
    }
    int minimizedMaximum(int n, vector<int>& quantities) {
        int left = 0;
        int right = *max_element(quantities.begin(), quantities.end());
        while(left < right){
            int mid = (left + right)/2;
            if(canDistribute(mid, quantities, n)){
                right = mid;
            }else{
                left = mid + 1;
            }
        }
        return left;
    }
};
