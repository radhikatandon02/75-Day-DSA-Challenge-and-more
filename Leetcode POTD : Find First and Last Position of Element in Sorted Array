class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int n = nums.size();
        vector<int> ds ;
        ds.push_back(firstOcc(nums,n,target)) ;
        ds.push_back(lastOcc(nums,n,target)) ;
        return ds ;
    }

int firstOcc(vector<int>& arr,int n,int key)
{
    int s = 0;
    int e = n-1;
    int ans = -1;
    while(s<=e){
        int mid = s+(e-s)/2;
        if(arr[mid]==key){
            ans = mid;
            e = mid-1;
        }
        else if(arr[mid]<key){
            s = mid+1;
        }
        else{
            e = mid-1;
        }
    }
    return ans;
}

int lastOcc(vector<int>& arr,int n, int key)
{
    int s = 0;
    int e = n-1;
    int ans = -1;
    while(s<=e){
        int mid = s+(e-s)/2;
        if(arr[mid]==key){
            ans = mid;
            s = mid+1;
        }
        else if(arr[mid]<key){
            s = mid+1;
        }
        else{
            e = mid-1;
        }
    }
    return ans;
}
};
