/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root, vector<int>&tree)
    {
        if(root != NULL)
        {
            inorder(root->left, tree);
            tree.push_back(root->val);
            inorder(root->right, tree);
        }
    }
    int rangeSumBST(TreeNode* root, int low, int high) {
        vector<int> tree;
        inorder(root, tree);
        int sum = 0;
        for(int i=0; i<tree.size(); i++)
        {
            if(tree[i]>=low && tree[i]<=high)
            {
                sum += tree[i];
            }
        }
        return sum;
    }
};
